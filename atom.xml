<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ScalaHub]]></title>
  <link href="http://scalahub.com//atom.xml" rel="self"/>
  <link href="http://scalahub.com//"/>
  <updated>2013-02-11T22:45:19+01:00</updated>
  <id>http://scalahub.com//</id>
  <author>
    <name><![CDATA[Edi Weissmann]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scala client for MaxMind Geo-IP]]></title>
    <link href="http://scalahub.com//blog/2013/01/07/scala-client-for-maxmind-geo-ip/"/>
    <updated>2013-01-07T22:47:00+01:00</updated>
    <id>http://scalahub.com//blog/2013/01/07/scala-client-for-maxmind-geo-ip</id>
    <content type="html"><![CDATA[<p><img src="http://farm1.staticflickr.com/51/138297060_de2979e042.jpg" alt="You are here" /></p>

<p><a href="https://github.com/snowplow/scala-maxmind-geoip">scala-maxmind-geoip</a> is a Scala wrapper for the <a href="http://dev.maxmind.com/geoip/">MaxMind</a> Java Geo-IP library.</p>

<p>Besides the friendly <strong>Scala syntax</strong>, you get <strong>configurable LRU caching</strong> out of the box. And if you are using <code>SBT</code> there&#8217;s built-in <strong>automagical update</strong> to the latest MaxMind <code>GeoLiteCity.dat</code> and Java client library version.</p>

<p>Quick usage example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">geoDbFile</span> <span class="k">=</span> <span class="k">new</span> <span class="n">java</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="nc">File</span><span class="o">(</span><span class="n">getClass</span><span class="o">.</span><span class="n">getResource</span><span class="o">(</span><span class="s">&quot;/maxmind/GeoLiteCity.dat&quot;</span><span class="o">).</span><span class="n">toURI</span><span class="o">())</span>
</span><span class='line'><span class="k">val</span> <span class="n">ipGeo</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">IpGeo</span><span class="o">(</span><span class="n">dbFile</span> <span class="k">=</span> <span class="n">geoDbFile</span><span class="o">,</span> <span class="n">lruCache</span> <span class="k">=</span> <span class="mi">100</span><span class="o">,</span> <span class="n">memCache</span> <span class="k">=</span> <span class="kc">false</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="n">loc</span> <span class="k">&lt;-</span> <span class="n">ipGeo</span><span class="o">.</span><span class="n">getLocation</span><span class="o">(</span><span class="s">&quot;204.232.175.78&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="n">loc</span><span class="o">.</span><span class="n">countryCode</span><span class="o">)</span>   <span class="c1">// US</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="n">loc</span><span class="o">.</span><span class="n">countryName</span><span class="o">)</span>   <span class="c1">// United States</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/snowplow/scala-maxmind-geoip">scala-maxmind-geoip</a> is written by <a href="https://github.com/alexanderdean">Alexander Dean</a> from <a href="http://snowplowanalytics.com">SnowPlow Analytics</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[scalaj-time - A Scala Wrapper For Joda Time]]></title>
    <link href="http://scalahub.com//blog/2012/12/22/scala-time-a-scala-wrapper-for-joda-time/"/>
    <updated>2012-12-22T12:52:00+01:00</updated>
    <id>http://scalahub.com//blog/2012/12/22/scala-time-a-scala-wrapper-for-joda-time</id>
    <content type="html"><![CDATA[<p><img src="http://farm5.staticflickr.com/4017/4469802928_3a9405be0d_n.jpg" alt="Alarm clock" /></p>

<p><a href="https://github.com/jorgeortiz85/scala-time">scalaj-time</a> is a scala <strong>convenience wrapper</strong> around the <a href="http://joda-time.sourceforge.net/">Joda time</a> libraries.</p>

<p>It provides more <strong>pleasant syntax</strong> operators: addition, subtraction and comparison, and also, fields are now available in the Scala convention, without the &#8220;get&#8221; prefix.</p>

<p>Here&#8217;s some example usage:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">import</span> <span class="nn">org.scala_tools.time.Imports._</span>
</span><span class='line'>
</span><span class='line'><span class="nc">DateTime</span><span class="o">.</span><span class="n">now</span> <span class="c1">// returns org.joda.time.DateTime</span>
</span><span class='line'>
</span><span class='line'><span class="nc">DateTime</span><span class="o">.</span><span class="n">now</span> <span class="o">+</span> <span class="mf">2.</span><span class="n">months</span> <span class="c1">// two months from now</span>
</span><span class='line'>
</span><span class='line'><span class="nc">DateTime</span><span class="o">.</span><span class="n">nextMonth</span> <span class="o">&lt;</span> <span class="nc">DateTime</span><span class="o">.</span><span class="n">now</span> <span class="o">+</span> <span class="mf">2.</span><span class="n">months</span> <span class="c1">// true</span>
</span><span class='line'>
</span><span class='line'><span class="nc">DateTime</span><span class="o">.</span><span class="n">now</span> <span class="n">to</span> <span class="nc">DateTime</span><span class="o">.</span><span class="n">tomorrow</span> <span class="c1">// returns an org.joda.time.Interval</span>
</span><span class='line'>
</span><span class='line'><span class="o">(</span><span class="mf">1.</span><span class="n">hours</span> <span class="o">+</span> <span class="mf">25.</span><span class="n">minutes</span> <span class="o">+</span> <span class="mf">15.</span><span class="n">seconds</span><span class="o">).</span><span class="n">millis</span> <span class="c1">// returns org.joda.time.Duration</span>
</span><span class='line'>
</span><span class='line'><span class="mf">9.</span><span class="n">months</span> <span class="o">+</span> <span class="mf">3.d</span><span class="n">ays</span> <span class="c1">// returns org.joda.time.Period</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/jorgeortiz85/scala-time">scalaj-time</a> is created by <a href="https://github.com/jorgeortiz85">Jorge Ortiz</a> from <a href="https://github.com/scalaj">scalaj</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[scala-ssh - Remote shell access via SSH]]></title>
    <link href="http://scalahub.com//blog/2012/12/11/scala-ssh-remote-shell-access-via-ssh/"/>
    <updated>2012-12-11T21:34:00+01:00</updated>
    <id>http://scalahub.com//blog/2012/12/11/scala-ssh-remote-shell-access-via-ssh</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sirthias/scala-ssh">scala-ssh</a> provides remote shell access via SSH for your Scala applications.</p>

<p>Besides remote execution of shell commands, you get access to <code>stdin</code>, <code>stdout</code> and <code>stderr</code>, private key authentication and host configuration via code or from resource file.</p>

<p>Here&#8217;s a simple example of how to use the API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="nc">SSH</span><span class="o">(</span><span class="s">&quot;repl.scalahub.com&quot;</span><span class="o">)</span> <span class="o">{</span> <span class="n">client</span> <span class="k">=&gt;</span>
</span><span class='line'>  <span class="n">client</span><span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="s">&quot;scala --version&quot;</span><span class="o">).</span><span class="n">right</span><span class="o">.</span><span class="n">map</span> <span class="o">{</span> <span class="n">res</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;And the scala version is... [drums]... \n&quot;</span> <span class="o">+</span> <span class="n">res</span><span class="o">.</span><span class="n">stdOutAsString</span><span class="o">())</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/sirthias/scala-ssh">scala-ssh</a> is written by <a href="https://github.com/sirthias">Mathias</a> from <a href="http://spray.io">Spray.io</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scalatron - Learn Scala With Friends]]></title>
    <link href="http://scalahub.com//blog/2012/12/10/scalatron-learn-scala-with-friends/"/>
    <updated>2012-12-10T22:22:00+01:00</updated>
    <id>http://scalahub.com//blog/2012/12/10/scalatron-learn-scala-with-friends</id>
    <content type="html"><![CDATA[<p><img src="http://farm6.staticflickr.com/5141/5681410224_50ff7e4c8d_m.jpg" alt="Bots" /></p>

<p><a href="https://github.com/scalatron/scalatron">Scalatron</a> is a <strong>programming game</strong> in which <strong>bots</strong>, written in Scala, compete against each other in a <strong>virtual arena</strong>.</p>

<p>Sounds like <strong>fun</strong>! How would that work?</p>

<blockquote><p>…get together with some friends, set up a server, attach a projector, order some pizza and start hacking! A Scalatron hack-a-thon may be the quickest and most entertaining way to get a group of programmers into Scala.</p></blockquote>

<p>The <a href="https://github.com/scalatron/scalatron/blob/master/Scalatron/doc/markdown/Scalatron%20Game%20Rules.md">rules of the game</a> are clearly explained in the docs, so you can figure out how to code the Master bot with his Mini-bots and their interactions with Fluppet, Snorg, Zugar, and Toxifera.</p>

<p>You can also <a href="https://github.com/scalatron/scalatron/tree/master/Scalatron/samples">checkout these samples</a> to get a better feeling on <strong>how a bot would get coded</strong>.</p>

<p>A Scalatron evening sure sounds like fun, so <a href="https://www.google.com/search?q=scalatron%20site:meetup.com">checkout if there&#8217;s one happening in your area</a>, or maybe even host one?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Travis CI - Continuous integration for your open source scala project]]></title>
    <link href="http://scalahub.com//blog/2012/12/10/travis-ci-continuous-integration-for-your-open-source-scala-project/"/>
    <updated>2012-12-10T20:32:00+01:00</updated>
    <id>http://scalahub.com//blog/2012/12/10/travis-ci-continuous-integration-for-your-open-source-scala-project</id>
    <content type="html"><![CDATA[<p><img src="http://scalahub.com//images/travis-ci.jpeg" alt="Travis CI logo" /></p>

<p>Do you have an open source project written in Scala? (Well done!) <a href="http://travis-ci.org">Travis CI</a> offers a hosted continuous integration for the open source community, and <a href="http://about.travis-ci.org/docs/user/languages/scala/">they support Scala projects</a>.</p>

<p>Setting up continuous integration with <a href="http://github.com/">GitHub</a> is super-easy. Simply add a <code>.travis.yml</code> file to your project, telling Travis that it&#8217;s written in Scala, and optionally defining the Scala version to use. That&#8217;s it! Travis is pretty smart and will figure out by itself if you chose SBT or Maven :)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">language</span><span class="k">:</span> <span class="kt">scala</span>
</span><span class='line'><span class="n">scala</span><span class="k">:</span>
</span><span class='line'>   <span class="kt">-</span> <span class="err">2</span><span class="kt">.</span><span class="err">8</span><span class="kt">.</span><span class="err">2</span>
</span><span class='line'>   <span class="kt">-</span> <span class="err">2</span><span class="kt">.</span><span class="err">9</span><span class="kt">.</span><span class="err">2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, simply log in to <a href="http://travis-ci.org">travis-ci.org</a> with your GitHub account and enable continuous integration for your project <a href="https://travis-ci.org/profile">from the Travis profile page</a>.</p>

<p>Once authorized to your GitHub account, Travis will add a commit hook that builds your project each time you commit code.
A nice touch is adding the Travis CI build status to your README file <a href="http://about.travis-ci.org/docs/user/status-images/">by using the build status images</a>, like the one below.</p>

<p><img src="https://secure.travis-ci.org/ediweissmann/metrics-statsmix.png?branch=master" alt="Travis build status" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goose - Article extractor]]></title>
    <link href="http://scalahub.com//blog/2012/12/09/goose-article-extractor/"/>
    <updated>2012-12-09T22:15:00+01:00</updated>
    <id>http://scalahub.com//blog/2012/12/09/goose-article-extractor</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/jiminoc/goose">Goose</a> is an article extractor written in Scala. Point it to an url and it will extract the <strong>plain text</strong> of the article, along with the <strong>main image</strong>,  embedded <strong>movies</strong> and <strong>meta information</strong> that it finds (tags, publish date). Awesome stuff, right?</p>

<p>Here&#8217;s an example of how to use it (It&#8217;s this simple!):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">goose</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Goose</span><span class="o">(</span><span class="k">new</span> <span class="nc">Configuration</span><span class="o">)</span>
</span><span class='line'><span class="k">val</span> <span class="n">article</span> <span class="k">=</span> <span class="n">goose</span><span class="o">.</span><span class="n">extractContent</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">article</span><span class="o">.</span><span class="n">cleanedArticleText</span><span class="o">)</span>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">article</span><span class="o">.</span><span class="n">title</span><span class="o">)</span>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">article</span><span class="o">.</span><span class="n">tags</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Checkout <a href="http://jimplush.com/blog/goose">the live demo page</a> where you can play with parsing an url of your choice.</p>

<p><a href="https://github.com/jiminoc/goose">Goose</a> is created by <a href="http://jimplush.com/">Jim Plush</a> from <a href="http://gravity.com">Gravity.com</a> Maven/SBT dependency is available in MavenCentral for quick use in your project.</p>
]]></content>
  </entry>
  
</feed>
