<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ScalaHub]]></title>
  <link href="http://scalahub.com//atom.xml" rel="self"/>
  <link href="http://scalahub.com//"/>
  <updated>2012-12-09T23:42:46+01:00</updated>
  <id>http://scalahub.com//</id>
  <author>
    <name><![CDATA[Edi Weissmann]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Goose - Article extractor]]></title>
    <link href="http://scalahub.com//blog/2012/12/09/goose-article-extractor/"/>
    <updated>2012-12-09T22:15:00+01:00</updated>
    <id>http://scalahub.com//blog/2012/12/09/goose-article-extractor</id>
    <content type="html"><![CDATA[<p>In a nutshell, point <a href="https://github.com/jiminoc/goose">Goose</a> to an url and it will extract the <strong>plain text</strong> of the article, along with the <strong>main image</strong>,  embedded <strong>movies</strong> and <strong>meta information</strong> that it finds (tags, publish date). Awesome stuff, right?</p>

<p>Checkout <a href="http://jimplush.com/blog/goose">the live demo page</a> where you can play with parsing an url of your choice.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">goose</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Goose</span><span class="o">(</span><span class="k">new</span> <span class="nc">Configuration</span><span class="o">)</span>
</span><span class='line'><span class="k">val</span> <span class="n">article</span> <span class="k">=</span> <span class="n">goose</span><span class="o">.</span><span class="n">extractContent</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">article</span><span class="o">.</span><span class="n">cleanedArticleText</span><span class="o">)</span>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">article</span><span class="o">.</span><span class="n">title</span><span class="o">)</span>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">article</span><span class="o">.</span><span class="n">tags</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/jiminoc/goose">Goose</a> is created by <a href="http://jimplush.com/">Jim Plush</a> from <a href="http://gravity.com">Gravity.com</a> Maven/SBT dependency is available.</p>
]]></content>
  </entry>
  
</feed>
